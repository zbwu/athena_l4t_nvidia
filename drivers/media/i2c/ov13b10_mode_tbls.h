/*
 * ov13b10_mode_tbls.h - ov13b10 sensor mode tables
 *
 * Copyright (c) 2015-2019, NVIDIA CORPORATION, All Rights Reserved.
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms and conditions of the GNU General Public License,
 * version 2, as published by the Free Software Foundation.
 *
 * This program is distributed in the hope it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#ifndef __OV13B10_TABLES__
#define __OV13B10_TABLES__

#include <media/camera_common.h>

#define OV13B10_TABLE_WAIT_MS	0
#define OV13B10_TABLE_END	1
#define OV13B10_MAX_RETRIES	3
#define OV13B10_WAIT_MS		7

#define HARDWARE_SYNC
#define ov13b10_reg struct	reg_8

static const ov13b10_reg ov13b10_start[] = {
	{0x0100, 0x01}, /* mode select streaming on */
	{OV13B10_TABLE_END, 0x00}
};

static const ov13b10_reg ov13b10_stop[] = {
	{0x0100, 0x00}, /* mode select streaming off */
	{OV13B10_TABLE_END, 0x00}
};

static const ov13b10_reg tp_colorbars[] = {
	{0x0600, 0x00},
	{0x0601, 0x02},

	{OV13B10_TABLE_WAIT_MS, OV13B10_WAIT_MS},
	{OV13B10_TABLE_END, 0x00}
};

static const ov13b10_reg mode_4208x3120[] = {
	{OV13B10_TABLE_WAIT_MS, OV13B10_WAIT_MS},

	/* init setting */
	{0x0103,0x01},
#ifdef HARDWARE_SYNC
	{0x3663,0x22},
	{0x3822,0x34},
	{0x3823,0x20},
	{0x382a,0x18},
	{0x382b,0xa6},
#else
	{0x3663,0x26},
	{0x3822,0x14},
	{0x3823,0x08},
#endif
	{0x0303,0x01},
	{0x0305,0x58},
	{0x0321,0x00},
	{0x0323,0x04},
	{0x0324,0x01},
	{0x0325,0xa4},
	{0x0326,0x81},
	{0x0327,0x04},
	{0x3012,0x07},
	{0x3013,0x32},
	{0x3107,0x23},
	{0x3501,0x0c},
	{0x3502,0x10},
	{0x3504,0x08},
	{0x3508,0x07},
	{0x3509,0xc0},
	{0x3885,0x0f}, // mipi
	{0x3600,0x16},
	{0x3601,0x54},
	{0x3612,0x4e},
	{0x3620,0x00},
	{0x3621,0x68},
	{0x3622,0x66},
	{0x3623,0x03},
	{0x3662,0x92},
	{0x3666,0xbb},
	{0x3667,0x44},
	{0x366e,0xff},
	{0x366f,0xf3},
	{0x3675,0x44},
	{0x3676,0x00},
	{0x367f,0xe9},
	{0x3681,0x32},
	{0x3682,0x1f},
	{0x3683,0x0b},
	{0x3684,0x0b},
	{0x3704,0x0f},
	{0x3706,0x40},
	{0x3708,0x3b},
	{0x3709,0x72},
	{0x370b,0xa2},
	{0x3714,0x24},
	{0x371a,0x3e},
	{0x3725,0x42},
	{0x3739,0x12},
	{0x3767,0x00},
	{0x377a,0x0d},
	{0x3789,0x18},
	{0x3790,0x40},
	{0x3791,0xa2},
	{0x37c2,0x04},
	{0x37c3,0xf1},
	{0x37d9,0x0c},
	{0x37da,0x02},
	{0x37dc,0x02},
	{0x37e1,0x04},
	{0x37e2,0x0a},
	{0x3800,0x00},
	{0x3801,0x00},
	{0x3802,0x00},
	{0x3803,0x08},
	{0x3804,0x10},
	{0x3805,0x8f},
	{0x3806,0x0c},
	{0x3807,0x47},
	{0x3808,0x10},
	{0x3809,0x70},
	{0x380a,0x0c},
	{0x380b,0x30},
	{0x380c,0x04},
	{0x380d,0x98},
	{0x380e,0x0c},
	{0x380f,0x7c},
	{0x3811,0x0f},
	{0x3813,0x08},
	{0x3814,0x01},
	{0x3815,0x01},
	{0x3816,0x01},
	{0x3817,0x01},
	{0x381f,0x08},
	{0x3820,0x88},
	{0x3821,0x00},
	{0x3822,0x14},
	{0x382e,0xe6},
	{0x3c80,0x00},
	{0x3c87,0x01},
	{0x3c8c,0x19},
	{0x3c8d,0x1c},
	{0x3ca0,0x00},
	{0x3ca1,0x00},
	{0x3ca2,0x00},
	{0x3ca3,0x00},
	{0x3ca4,0x50},
	{0x3ca5,0x11},
	{0x3ca6,0x01},
	{0x3ca7,0x00},
	{0x3ca8,0x00},
	{0x4008,0x02},
	{0x4009,0x0f},
	{0x400a,0x01},
	{0x400b,0x19},
	{0x4011,0x21},
	{0x4017,0x08},
	{0x4019,0x04},
	{0x401a,0x58},
	{0x4032,0x1e},
	{0x4050,0x02},
	{0x4051,0x09},
	{0x405e,0x00},
	{0x4066,0x02},
	{0x4501,0x00},
	{0x4502,0x10},
	{0x4505,0x00},
	{0x4800,0x64},
	{0x481b,0x3e},
	{0x481f,0x30},
	{0x4825,0x34},
	{0x4837,0x0e},
	{0x484b,0x01},
	{0x4883,0x02},
	{0x5000,0xff},
	{0x5001,0x0f},
	{0x5045,0x20},
	{0x5046,0x20},
	{0x5047,0xa4},
	{0x5048,0x20},
	{0x5049,0xa4},

	/* mode setting */
	{0x3501,0x0c},
	{0x3502,0x10},
	{0x3662,0x92},
	{0x0305,0x58},
	{0x3714,0x24},
	{0x371a,0x3e},
	{0x3739,0x12},
	{0x37c2,0x04},
	{0x37d9,0x0c},
	{0x3800,0x00},
	{0x3801,0x00},
	{0x3802,0x00},
	{0x3803,0x08},
	{0x3804,0x10},
	{0x3805,0x8f},
	{0x3806,0x0c},
	{0x3807,0x47},
	{0x3808,0x10},
	{0x3809,0x70},
	{0x380a,0x0c},
	{0x380b,0x30},
	{0x380c,0x04},
	{0x380d,0x98},
	{0x380e,0x0c},
	{0x380f,0x7c},
	{0x3811,0x0f},
	{0x3813,0x08},
	{0x3814,0x01},
	{0x3815,0x01},
	{0x3816,0x01},
	{0x3817,0x01},
	{0x3820,0x88},
	{0x4008,0x02},
	{0x4009,0x0f},
	{0x4050,0x02},
	{0x4051,0x09},
	{0x4501,0x00},
	{0x4505,0x00},
	{0x4837,0x0e},
	// {0x5000,0xff},
	// {0x5001,0x0f},
	{0x5000,0xfd},
	{0x5001,0x0d}, //Remove PD by DPC
// #ifdef HARDWARE_SYNC
// 	{0x3663,0x22},
// 	{0x3822,0x34},
// 	{0x3823,0x20},
// 	{0x382a,0x00},
// 	{0x382b,0x20},
// #else
// 	{0x3663,0x26},
// 	{0x3822,0x14},
// 	{0x3823,0x08},
// #endif
	{OV13B10_TABLE_END, 0x0000}
};

enum {
	OV13B10_MODE_4208X3120,
	OV13B10_MODE_START_STREAM,
	OV13B10_MODE_STOP_STREAM,
	OV13B10_MODE_TEST_PATTERN
};

static const ov13b10_reg *mode_table[] = {
	[OV13B10_MODE_4208X3120]		= mode_4208x3120,
	[OV13B10_MODE_START_STREAM]		= ov13b10_start,
	[OV13B10_MODE_STOP_STREAM]		= ov13b10_stop,
	[OV13B10_MODE_TEST_PATTERN]		= tp_colorbars,
};

static const int ov13b10_30fps[] = {
	30,
};

static const struct camera_common_frmfmt ov13b10_frmfmt[] = {
	{{4208, 3120},	ov13b10_30fps,	1, 0,	OV13B10_MODE_4208X3120},
};

#endif  /* __OV13B10_TABLES__ */
